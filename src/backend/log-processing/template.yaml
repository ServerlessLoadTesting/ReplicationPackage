AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  Log Processing utilities stack.
  Provides a dedicated Kinesis stream for log ingestion.
  Subscribe new and existing Lambda function logs named `Airline` to Kinesis
  and only log entries that have `REPORT` or `MONITORING` as strings
  Expire ALL log entries after 14 days
  Creates Custom Metrics for Memory Used, Size, and Estimated Cost for each function and version
  Also creates custom metrics based on "MONITORING|<metric_value>|<metric_unit>|<metric_name>|<namespace>|<dimensions>" format

Parameters:
  EventSourceType:
    Type: String
    Default: 'Kinesis'
    Description: >
      What's the event source you will intend to use?
      If logs are pushed from CloudWatch Logs to Lambda directly, then use 'Lambda'.
      If logs are pushed to a Kinesis Stream first, then use 'Kinesis'.
      Other event sources are not supported (yet).
    AllowedValues:
      - 'Lambda'
      - 'Kinesis'
  TimeoutSeconds:
    Type: Number
    Default: 30
    MaxValue: 900
    MinValue: 1
    Description: >
      (optional) Timeout for the Lambda function that would ship metrics to CloudWatch. Defaults to 30s.
  KinesisStreamBatchSize:
    Type: Number
    Default: 100
    Description: >
      (optional) Only relevant to the Kinesis event source type. The batch size to use for the
      subscription.
  RecordLambdaUsageMetrics:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: >
      (optional) Whether to collect Lambda usage metrics (i.e. billed duration, memory size,
      max memory used) from the logs and turn them into metrics.
      Allowed values are "true" or "false".
  RecordLambdaCostMetric:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: >
      (optional) Whether to report estimated cost for Lambda functions as metrics.
      Allowed values are "true" or "false".
  RecordLambdaColdStartMetric:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: >
      (optional) Whether to report init duration for Lambda functions as metrics.
      Allowed values are "true" or "false".
Conditions:
  IsLambda: !Equals [!Ref EventSourceType, 'Lambda']
  IsKinesis: !Equals [!Ref EventSourceType, 'Kinesis']

Globals:
  Function:
    Timeout: !Ref TimeoutSeconds
    Runtime: nodejs12.x
    MemorySize: 128
    Environment:
      Variables:
        RECORD_LAMBDA_USAGE_METRICS: !Ref RecordLambdaUsageMetrics
        RECORD_LAMBDA_COST_METRIC: !Ref RecordLambdaCostMetric
        RECORD_LAMBDA_COLD_START_METRIC: !Ref RecordLambdaColdStartMetric


Resources:
  ConvertLambda:
    Type: AWS::Serverless::Function
    Condition: IsLambda
    Properties:
      CodeUri: functions/
      Handler: index.handler
      Policies:
        - Statement:
            Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: "*"

  ConvertLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsLambda
    Properties:
      LogGroupName: !Sub /aws/lambda/${ConvertLambda}

  # Kinesis Stream that will receive Logs from CloudWatch Logs
  LogProcessingStream:
    Type: AWS::Kinesis::Stream
    Properties:
      RetentionPeriodHours: 48
      ShardCount: 1

  ConvertKinesis:
    Type: AWS::Serverless::Function
    Condition: IsKinesis
    Properties:
      CodeUri: functions/
      Handler: index.handler
      Policies:
        - Statement:
            Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: "*"
      Events:
        Stream:
          Type: Kinesis
          Properties:
            Stream: !GetAtt LogProcessingStream.Arn
            BatchSize: !Ref KinesisStreamBatchSize
            StartingPosition: LATEST

  ConvertKinesisLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsKinesis
    Properties:
      LogGroupName: !Sub /aws/lambda/${ConvertKinesis}

  AutoSetLogGroupsRetention:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:374852340823:applications/auto-set-log-group-retention
        SemanticVersion: 1.5.0
      Parameters:
        # The number of days to retain logs in CloudWatch Logs for.
        RetentionDays: "14" # Uncomment to override default value

  # Subscribe new and existing CloudWatch Log groups to ship logs to Kinesis
  SubscribeLogsToProcessingStream:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:374852340823:applications/auto-subscribe-log-group-to-arn
        SemanticVersion: 1.12.0
      Parameters:
        # The ARN of the Lambda function or Kinesis stream to subscribe a newly created CloudWatch log group to
        DestinationArn: !Sub ${LogProcessingStream.Arn}
        ## Disables processing of own logs
        ExcludePrefix: "ProcessCustomMetricsAsync" # Uncomment to override default value
        # Only subscribe to functions created for this project
        ## Otherwise we'd override all CloudWatch Logs by subscribing to our Kinesis
        Prefix: "/aws/lambda/Airline" # Uncomment to override default value
        # Only captures REPORT and Custom Metrics log events; reduces cost and unnecessary noise
        FilterPattern: "?REPORT ?MONITORING"

Outputs:
  ConvertLambdaFunctionName:
    Description: Name of the Lambda function name
    Value:
      !If [
        IsLambda,
        !Ref ConvertLambda,
        !Ref ConvertKinesis
      ]
  ConvertLambdaFunctionArn:
    Description: ARN of the Lambda function name
    Value:
      !If [
        IsLambda,
        !GetAtt ConvertLambda.Arn,
        !GetAtt ConvertKinesis.Arn
      ]
  LogProcessingStream:
    Value: !Sub ${LogProcessingStream.Arn}
    Description: Kinesis Stream used for log processing
